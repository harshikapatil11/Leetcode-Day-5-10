from collections import Counter

class Solution:
    def minWindow(self, s: str, t: str) -> str:
        t_count = Counter(t)
        left = 0
        min_window, min_length = "", float("inf")
        window_counts, required = {}, len(t_count)
        
        for right, char in enumerate(s):
            window_counts[char] = window_counts.get(char, 0) + 1
            
            while all(window_counts.get(c, 0) >= t_count[c] for c in t_count):
                if (right - left + 1) < min_length:
                    min_length = right - left + 1
                    min_window = s[left:right + 1]
                
                window_counts[s[left]] -= 1
                left += 1
        
        return min_window
